# Adjust config file
# a copy-paste of adsl-setup,
# only without input, reference names
# instate :)

# I have commented out all output but errors

# From AUTOCONF
prefix="/usr"
exec_prefix="${prefix}"

# Paths to programs
IFCONFIG="/sbin/ifconfig"
PPPD="/usr/sbin/pppd"
PPPOE="${exec_prefix}/sbin/pppoe"
ECHO="/bin/echo"
LOGGER="/usr/bin/logger -t `basename $0`"

# Set to "C" locale so we can parse messages from commands
LANG="C"
export LANG

CONFIG="/etc/ppp/pppoe.conf"

# Protect created files
umask 077

copy() {
    cp "$1" "$2"
    if [ "$?" != 0 ]
	then
		$ECHO "*** Error copying $1 to $2"
		$ECHO "*** Quitting."
		exit -1
    fi
}

# Must be root
if [ "`whoami`" != 0 ]
then
    $ECHO "Sorry, you must be root to run this script"
    exit -1
fi

# Prototype config file must exist
if [ ! -r "$CONFIG" ]
then
    $ECHO "Oh, dear, I don't see the file '$CONFIG' anywhere.  Please"
    $ECHO "re-install the PPPoE client."
    exit -1
fi

# Must have pppd
if [ ! -x $PPPD ]
then
    $ECHO "Oops, I can't execute the program '$PPPD'.  You"
    $ECHO "must install the PPP software suite, version 2.3.10 or later."
    exit -1
fi

. $CONFIG

if [ "$DEMAND" = "" ]
then
    DEMAND="no"
fi

# pppoe must exist
if [ ! -x "$PPPOE" ]
then
    $ECHO "Oh, dear, I can't execute the program '$PPPOE'.  Please"
    $ECHO "re-install the rp-pppoe client."
    exit -1
fi

# I don't like this text...
$ECHO "Test passed, adjusting configuration file..."

U="[*auth::usr*]"
E="[*hw::eth*]"
D="no"
DNS1="[*isp::dns1*]"
DNS2="[*isp::dns2*]"
PWD1="[*auth::passwd*]"
PWD2="${PWD1}"
FIREWALL="NONE"

$ECHO "Adjusting $CONFIG..."

copy $CONFIG $CONFIG-bak
if [ $? -ne 0 ]
then
	exit -1
fi

PEERDNS="no"
DNSTYPE="SPECIFY"

if [ -d /var/run ]
then
    VARRUN="/var/run"
else
    VARRUN="/etc/ppp"
fi

# Some #$(*& ISP's use a slash in the user name...
sed -e "s&^USER=.*&USER='$U'&" \
    -e "s&^ETH=.*&ETH='$E'&" \
    -e "s&^PIDFILE=.*&PIDFILE=\"$VARRUN/\$CF_BASE-adsl.pid\"&" \
    -e "s/^FIREWALL=.*/FIREWALL=$FIREWALL/" \
    -e "s/^DEMAND=.*/DEMAND=$D/" \
    -e "s/^DNSTYPE=.*/DNSTYPE=$DNSTYPE/" \
    -e "s/^DNS1=.*/DNS1=$DNS1/" \
    -e "s/^DNS2=.*/DNS2=$DNS2/" \
    -e "s/^PEERDNS=.*/PEERDNS=$PEERDNS/" \
    < $CONFIG-bak > $CONFIG

if [ $? != 0 ] ; then
    $ECHO "** Error modifying $CONFIG"
    $ECHO "** Quitting"
    exit -1
fi
