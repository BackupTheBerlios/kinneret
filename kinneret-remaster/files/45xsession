#!/bin/bash
PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin:/usr/games:/usr/local/bin:."
export PATH

umask 022

[ -n "$KDEDIR" ] || KDEDIR="/usr"
export KDEDIR

[ -n "$HOSTNAME" ] || HOSTNAME="$(hostname)"
export HOSTNAME

[ -z "$HOME" -o "$HOME" = "/" ] && HOME="/home/knoppix"
export HOME

# Set default cursor (artwiz)
xsetroot -cursor_name left_ptr

DONTCHANGE=""
[ -e $HOME/.kde/share/config/kdeglobals ] && DONTCHANGE="yes"

# Don't use this yet. We don't have TTF equivalents for all
# Fonts yet.
# QT_XFT=1
# export QT_XFT

# We need to source this so that the login screens get translated
[ -f /etc/profile ] && . /etc/profile

# Read default language/keyboard/background image
[ -f /etc/sysconfig/knoppix ]  && . /etc/sysconfig/knoppix
[ -f /etc/sysconfig/i18n ]  && . /etc/sysconfig/i18n
if [ -n "$LANG" ]; then
# Try to repair a KDE/locale bug
LA="$LANG"
L="${LANG%%@*}"
C=$(awk '/^'"$LANG"'/{print $2;exit 0}' /etc/locale.gen 2>/dev/null)
[ -n "$L" -a -n "$C" ] && LANG="$L.$C"
LC_ALL="$LA"
export LANG LC_ALL
fi

[ -f /etc/sysconfig/keyboard ]  && . /etc/sysconfig/keyboard

# Read Desktop, currently kde, gnome, larswm and twm are supported in this script
[ -f /etc/sysconfig/desktop ]  && . /etc/sysconfig/desktop

# kde is the default
[ -z "$DESKTOP" ] && DESKTOP="kde"

# Copy profiles if not already present

\cp -ua /etc/skel/{.acrorc,.Xdefaults,.bashrc,.nessus*,.links,.lynx*,.qt,.xine,tmp,.katoob,.cups,.weather,.sversionrc,.gimp-1.3,OpenOffice.org1.1,.ppp,.resolv.conf,.resolv.conf.sv,.idb} $HOME/
\cp -ua /usr/share/knoppix/profile/{.acrorc,.Xdefaults,.bashrc,.nessus*,.links,.lynx*,.qt,.xine,tmp} $HOME/

# We DO need the .gnome* directory for some programs that set permissions incorrectly
mkdir -p $HOME/.gnome/accels $HOME/.gnome_private

FREESPACE="$(df -k /home/knoppix | awk '/^\/|^rootfs/{print $4}')"

if [ ! -e $HOME/.netscape -a "$FREESPACE" -gt 1500 ] && [ -d /etc/skel/.netscape -o -d /usr/share/knoppix/profile/.netscape ]; then
\cp -ua /etc/skel/.netscape $HOME/ 2>/dev/null
\cp -ua /usr/share/knoppix/profile/.netscape $HOME/ 2>/dev/null
fi
if [ ! -e $HOME/.mozilla -a "$FREESPACE" -gt 1500 ] && [ -d /etc/skel/.mozilla -o -d /usr/share/knoppix/.mozilla ]; then
\cp -ua /etc/skel/.mozilla $HOME/ 2>/dev/null
\cp -ua /usr/share/knoppix/profile/.mozilla $HOME/ 2>/dev/null
fi

# It seems to be vital for galeon that a netscape bookmarks file exists
touch $HOME/.netscape/bookmarks.html >/dev/null 2>&1 || true

if [ -n "$LANGUAGE" ]; then
# Set mozilla and netscape preferred languages
for f in `ls -1 $HOME/.mozilla/*/*/prefs.js $HOME/.netscape/preferences.js 2>/dev/null`; do
echo 'user_pref("intl.accept_languages", "'"$LANGUAGE"', en");' >>"$f"
case "$LANGUAGE" in
de|at|ch)
echo 'user_pref("general.useragent.contentlocale", "AT");' >>"$f"
echo 'user_pref("general.useragent.locale", "de-AT");' >>"$f" ;;
esac
# Else leave default language
done

for f in `ls -1 $HOME/.mozilla/*/*/chrome/chrome.rdf.$LANGUAGE 2>/dev/null`; do
\mv -f "$f" "${f%%.${LANGUAGE}}"
done

fi

# Star/OpenOffice preinstall, now done in soffice startscript
# [ -f /etc/skel/.sversionrc ] && \cp -au /etc/skel/.sversionrc $HOME/
# [ -f /etc/skel/.user60.rdb ] && \cp -au /etc/skel/.user60.rdb $HOME/
# [ -d /etc/skel/office -a "$FREESPACE" -gt 3500 ] && \
# \cp -ua /etc/skel/office $HOME/

playsound(){
# Play sound if soundcore module present (checking /dev/sndstat is unreliable)
OGGPLAY=/usr/bin/ogg123
PLAY=/usr/bin/wavp
[ -x "$PLAY" ] || PLAY=/usr/bin/play-sample
[ -x "$PLAY" ] || PLAY=/usr/bin/play
if [ -x "$OGGPLAY" -a -f /usr/share/sounds/startup.ogg ]; then
case "$(lsmod)" in *sound*) { $OGGPLAY -q -p 64 /usr/share/sounds/startup.ogg >/dev/null 2>&1 & } ; sleep 1 ;; esac
elif [ -f /usr/share/sounds/startup.wav -a -x "$PLAY" ]; then
case "$(lsmod)" in *sound*) { $PLAY /usr/share/sounds/startup.wav >/dev/null 2>&1 & } ; sleep 2 ;; esac
fi
}

startkde(){
if [ -z "$DONTCHANGE" ]; then
# No persistent homedir, copy everything
\cp -ua /etc/skel/{.kde*,Desktop} $HOME/
\cp -ua /usr/share/knoppix/profile/{.kde*,Desktop} $HOME/
# And sort icons first time (KDE bug?)
cat >>$HOME/.kde/Autostart/sorticons.desktop <<EOF
[Desktop Entry]
Name=Sort Icons
Name[de]=Symbole aufrï¿½men
Exec=kfmclient sortDesktop
Type=Application
Icon=html
Terminal=0
EOF
else
# Only regenerate the config and Desktop files if missing
\mkdir -p $HOME/.kde/share $HOME/Desktop
\cp -ua /etc/skel/.kde/share/* $HOME/.kde/share/
\cp -ua /usr/share/knoppix/profile/.kde/share/* $HOME/.kde/share/ 2>/dev/null
\cp -ua /etc/skel/Desktop/* $HOME/Desktop/
\cp -ua /usr/share/knoppix/profile/Desktop/* $HOME/Desktop/ 2>/dev/null
rm -f $HOME/.kde/Autostart/sorticons.desktop
fi

# Check for /index.html (_en), or KNOPPIX/index.html (_en) on this CD
if [ -e /cdrom/index.html ]; then
INDEXFILE="/cdrom/index.html"
else
for i in index KNOPPIX/index; do
INDEXFILEDE="/cdrom/${i}.html"
INDEXFILEEN="/cdrom/${i}_en.html"
[ -e "$INDEXFILEEN" ] && INDEXFILE="$INDEXFILEEN" && [ "$LANGUAGE" != "de" ] && break
[ -e "$INDEXFILEDE" ] && INDEXFILE="$INDEXFILEDE" && [ "$LANGUAGE"  = "de" ] && break
done
fi

if [ -e "$INDEXFILE" ]; then
cat >> $HOME/Desktop/KNOPPIX.desktop <<EOF
[Desktop Entry]
Name=KNOPPIX
# Exec=kfmclient openProfile webbrowsing $INDEXFILE
Exec=konqueror --geometry 800x600+110+40 file:$INDEXFILE
Type=Application
Icon=html
Terminal=0
EOF
ln $HOME/Desktop/KNOPPIX.desktop $HOME/.kde/Autostart/showindex.desktop
fi

# OpenWebSchool
OPENWEBSCHOOL="/cdrom/Demos/OpenWebSchool/index.html"
if [ -e "$OPENWEBSCHOOL" ]; then
cat >> $HOME/Desktop/OWS.desktop <<EOF
[Desktop Entry]
Name=OWS
Comment=Open Web School
Exec=netscape $OPENWEBSCHOOL
Type=Application
Icon=html
Terminal=0
EOF
fi

# Setup language/keyboard
[ -d $HOME/.kde/share/config ] || mkdir -p $HOME/.kde/share/config
if [ -z "$DONTCHANGE" ]; then
touch $HOME/.kde/share/config/kdeglobals
rm -f $HOME/.kde/share/config/kdeglobals.tmp
sed -e 's/^Charset=.*$/Charset='"$CHARSET"'/' \
    -e 's/^Country=.*$/Country='"$COUNTRY"'/' \
    -e 's/^Language=.*$/Language='"$LANGUAGE"'/' \
    $HOME/.kde/share/config/kdeglobals > $HOME/.kde/share/config/kdeglobals.tmp
\mv -f $HOME/.kde/share/config/kdeglobals.tmp $HOME/.kde/share/config/kdeglobals
if [ -z "$BACKGROUND" -o ! -e "$BACKGROUND" ]; then
for i in jpg png gif; do
BACKGROUND=/usr/local/lib/knoppix.$i
[ -e "$BACKGROUND" ] && break
done
fi
sed -e 's|Wallpaper=.*$|Wallpaper='"$BACKGROUND"'|g' \
    $HOME/.kde/share/config/kdesktoprc > $HOME/.kde/share/config/kdesktoprc.tmp
\mv -f $HOME/.kde/share/config/kdesktoprc.tmp $HOME/.kde/share/config/kdesktoprc
touch -r /etc/skel/.kde/share/config/kdeglobals $HOME/.kde/share/config/kdeglobals 2>/dev/null
touch $HOME/.kde/share/config/kxkbrc
rm -f $HOME/.kde/share/config/kxkbrc.tmp
sed -e 's/^Layout=.*$/Layout='"$KDEKEYBOARD"'/' \
    -e 's/^Additional=.*$/Additional='"$KDEKEYBOARDS"'/' \
    $HOME/.kde/share/config/kxkbrc > $HOME/.kde/share/config/kxkbrc.tmp
\mv -f $HOME/.kde/share/config/kxkbrc.tmp $HOME/.kde/share/config/kxkbrc
touch -r /etc/skel/.kde/share/config/kxkbrc $HOME/.kde/share/config/kxkbrc 2>/dev/null

# Check for custom splashscreen in /cdrom/KNOPPIX
if [ -d /cdrom/KNOPPIX/ksplash ]; then
[ -d $HOME/.kde/share/apps ] || mkdir -p $HOME/.kde/share/apps
ln -s /cdrom/KNOPPIX/ksplash $HOME/.kde/share/apps/
fi

fi

# Play sound
playsound

# Start KDE3
export XDM_MANAGED="TRUE"

# This is /usr/bin/kde3
#!/bin/sh
#
#  DEFAULT KDE STARTUP SCRIPT ( KDE-3.0.2 )
#

# Boot sequence:
#
# kdeinit is used to fork off processes which improves memory usage
# and startup time.
#
# * kdeinit starts the dcopserver and klauncher first.
# * Then kded is started. kded is responsible for keeping the sycoca
#   database up to date. When an up to date database is present it goes
#   into the background and the startup continues.
# * Then kdeinit starts kcminit. kcminit performs initialisation of
#   certain devices according to the user's settings
#
# * Then ksmserver is started which in turn starts 
#   1) the window manager (kwin)
#   2) everything in $KDEDIR/share/autostart (kdesktop, kicker, etc.)
#   3) the rest of the session.

# Set a left cursor instead of the standard X11 "X" cursor, since I've heard
# from some users that they're confused and don't know what to do. This is
# especially necessary on slow machines, where starting KDE takes one or two
# minutes until anything appears on the screen.
#
# Set the background to plain grey.
# The standard X background is nasty, causing moire effects and exploding
# people's heads. We use colours from the standard KDE palette for those with
# palettised displays.

#test "$XDM_MANAGED" || bkg="-solid #C0C0C0"
#xsetroot -cursor_name left_ptr $bkg

# The user's personal KDE directory is usually ~/.kde, but this setting
# may be overridden by setting KDEHOME.

kdehome=$HOME/.kde
test -n "$KDEHOME" && kdehome=`echo "$KDEHOME"|sed "s,^\~/,$HOME/,"`

# Activate the kde font directories.
#
# There are 4 directories that may be used for supplying fonts for KDE.
#
# There are two system directories. These belong to the administrator.
# There are two user directories, where the user may add her own fonts.
#
# The 'override' versions are for fonts that should come first in the list,
# i.e. if you have a font in your 'override' directory, it will be used in
# preference to any other.
#
# The preference order looks like this:
# user override, system override, X, user, system
#
# Where X is the original font database that was set up before this script
# runs.

#usr_odir=$kdehome/share/fonts/override
#usr_fdir=$kdehome/share/fonts
#if test -n "$KDEDIRS"; then
#  kdedirs_first=`echo $KDEDIRS|sed -e 's/:.*//'`
#  sys_odir=$kdedirs_first/share/fonts/override
#  sys_fdir=$kdedirs_first/share/fonts
#else
#  sys_odir=$KDEDIR/share/fonts/override
#  sys_fdir=$KDEDIR/share/fonts
#fi

# We run mkfontdir on the user's font dirs (if we have permission) to pick
# up any new fonts they may have installed. If mkfontdir fails, we still
# add the user's dirs to the font path, as they might simply have been made
# read-only by the administrator, for whatever reason.

#test -d $usr_odir && (mkfontdir $usr_odir ; xset +fp $usr_odir)
#test -d $sys_odir && xset +fp $sys_odir
#test -d $usr_fdir && (mkfontdir $usr_fdir ; xset fp+ $usr_fdir)
#test -d $sys_fdir && xset fp+ $sys_fdir

#
# Add any user-installed font directories to the X font path
#kde_fontsdir=$kdehome/share/fonts
#kde_fontpaths=$kde_fontsdir/fontpaths
 
#if test -r $kde_fontpaths ; then
#    for fpath in `cat $kde_fontpaths | grep -v '#'` ; do
#        if test -s $fpath/fonts.dir ; then
#            xset fp+ $fpath
#        fi
#    done
#fi

# Ask X11 to rebuild its font list.
#xset fp rehash

#
# Get Ghostscript to look into user's KDE fonts dir for additional Fontmap
#if test -n "$GS_LIB" ; then
#    GS_LIB=$kde_fontsdir:$GS_LIB
#    export GS_LIB
#else
#    GS_LIB=$kde_fontsdir
#    export GS_LIB
#fi

# Link "tmp" resource to directory in /tmp
# Creates a directory /tmp/kde-$USER and links $KDEHOME/tmp-$HOSTNAME to it.
lnusertemp tmp >/dev/null

# Link "socket" resource to directory in /tmp
# Creates a directory /tmp/ksocket-$USER and links $KDEHOME/socket-$HOSTNAME to it.
lnusertemp socket >/dev/null

# In case of dcop sockets left by a previous session, cleanup
# Should not be necessary for Knoppix.
dcopserver_shutdown

# run KPersonalizer before the session, if this is the first login
# grep 'FirstLogin=false' $kdehome/share/config/kpersonalizerrc >/dev/null 2>/dev/null
# if test $? -ne 0; then
#     # start only dcopserver, don't start whole kdeinit (takes too long)
#    dcopserver
#    kwin &
#    kpersonalizer --before-session
#    # handle kpersonalizer restarts (language change)
#    while test $? -eq 1; do
#        kpersonalizer --r --before-session
#    done
#    dcopserver_shutdown
#    # shutdown will also make kwin quit, give it time to do so
#    sleep 1
# fi

# the splashscreen and progress indicator
LD_BIND_NOW=true ksplash

# Create automatic Desktop icons
#mkdesktophdicons

# We set LD_BIND_NOW to increase the efficiency of kdeinit.
# kdeinit unsets this variable before loading applications.
LD_BIND_NOW=true kdeinit +kcminit +knotify || \
  { xmessage -geometry 500x100 "Couldn't start kdeinit. Check your installation."; return 1; }

# finally, give the session control to the session manager
# Syntax:   ksmserver [--restore] [--windowmanager <wm>]
# if no windowmanager is specified, ksmserver will ensure kwin is started.
# [--restore] should be controlled by kdm
# kwrapper is used to reduce startup time and memory usage
kwrapper ksmserver
if [ "$?" -eq 255 ]; then
xmessage -geometry 500x100 "Couldn't start ksmserver. Check your installation."
return 1
fi

# Clean up - normally not necessary when running from CD
( kdeinit_shutdown ; dcopserver_shutdown ; artsshell -q terminate ) >/dev/null 2>&1 </dev/null
# EOF /usr/bin/kde3
killall kdeinit 2>/dev/null
exit 0
}
# End startkde

# starttwm: This is also the error fallback windowmanager. It should display
# an error message if it was started as such.
# Paraeters: "reasoncode" "reasoncode-specific description"
starttwm(){

XTERM=rxvt
type -path rxvt >/dev/null 2>&1 || XTERM=xterm
$XTERM -geometry +0-0 -bg black -fg green -T Shell &

MESSAGE=""
if [ -n "$1" ]; then
 case "$1" in
  lowmem)
   case "$LANGUAGE" in
    de|at|ch) MESSAGE="
Nicht genug Speicher zum Start von $DESKTOP!
(Mindestens $2 MB bentigt.)

Starte stattdessen den TWM Windowmanager.
Achtung: Nicht alle Programme im linke-
Maustaste-Men werden funktionieren!
"
    ;;
    es) MESSAGE="
No hay suficiente memoria para arrancar $DESKTOP!
(Se necesitan al menos $2 MB.)

Usando el gestor de ventanas TWM en su lugar.
Aviso: No todos los programas en
el men que aparece al pulsar el botn izquierdo
del ratn funcionarï¿½ aquï¿½
"
    ;;
    *) MESSAGE="
Not enough memory to start $DESKTOP!
(At least $2 MB required.)

Using TWM windowmanager instead.
Caution: Not all programs in
the left-Mousebutton-Menu will
work here!
"
    ;;
   esac
   ;;
  invalidwm)
   case "$LANGUAGE" in
    de|at|ch) MESSAGE="
Desktop-Manager '$DESKTOP' wird nicht untersttzt!

Starte stattdessen den TWM Windowmanager.
Achtung: Nicht alle Programme im linke-
Maustaste-Men werden funktionieren!
"
    ;;
    es) MESSAGE="
El gestor de ventanas '$DESKTOP' no esta soportado!

Usando el gestor de ventanas TWM en su lugar.
Aviso: No todos los programas en
el men que aparece al pulsar el botn izquierdo
del ratn funcionarï¿½ aquï¿½
"
    ;;
    *) MESSAGE="
Desktop manager '$DESKTOP' is not supported!

Using TWM windowmanager instead.
Caution: Not all programs in
the left-Mousebutton-Menu will
work here!
"
    ;;
   esac
  ;;
 esac
fi

if [ -n "$MESSAGE" ]; then
( xmessage -geometry -0+0 "
$MESSAGE
"
) &
sleep 4
fi

playsound
exec twm
}

startgnome(){
type gnome-session >/dev/null 2>&1 || starttwm
\cp -ua /etc/skel/{.gnome*,GNUstep,.sawfish,.nautilus,Nautilus} $HOME/ 2>/dev/null
\cp -ua /usr/share/knoppix/profile/{.gnome*,GNUstep,.sawfish,.nautilus,Nautilus} $HOME/ 2>/dev/null
sed -e 's/^font=.*$/-*-fixed-medium-r-normal-*-14-*-*-*-*-*-'"$CHARSET"'/g' \
  $HOME/.gnome/Terminal > $HOME/.gnome/Terminal.tmp
\mv -f  $HOME/.gnome/Terminal.tmp $HOME/.gnome/Terminal
# Add HD partitions to GNOME desktop
rm -f $HOME/.gnome-desktop/[hs]d[a-z][1-9]* 2>/dev/null
[ ! -d $HOME/.gnome-desktop ] && mkdir -p $HOME/.gnome-desktop
[ -f /cdrom/KNOPPIX/KNOPPIX ] && ln -s /cdrom $HOME/.gnome-desktop/ 2>/dev/null
HDS="`ls -1d /mnt/[hs]d[a-z][1-9]* /mnt/cdrom* 2>/dev/null`"
[ -n "$HDS" ] && ln -s $HDS $HOME/.gnome-desktop/ 2>/dev/null
OPENWEBSCHOOL="/cdrom/Demos/OpenWebSchool"
[ -e "$OPENWEBSCHOOL" ] && ln -s "$OPENWEBSCHOOL" $HOME/.gnome-desktop/OWS
playsound

# Create automatic Desktop icons
mkdesktophdicons

# Nautilus2 and others seem to depend on XFT
GDK_USE_XFT=1 exec gnome-session --purge-delay=4000
}

startlarswm(){
[ -e "$HOME"/.larswmrc ] || \cp -ua /etc/skel/.larswmrc $HOME/
playsound
exec larswm
}

startwindowmaker(){
# Create automatic Desktop icons
mkdesktophdicons

playsound
GDK_USE_XFT=1 exec wmaker
}

starticewm(){
# Create automatic Desktop icons
mkdesktophdicons

playsound
GDK_USE_XFT=1 exec icewm
}

startfluxbox(){
# Create automatic Desktop icons
mkdesktophdicons

playsound
GDK_USE_XFT=1 exec fluxbox
}

startxfce(){
# Create automatic Desktop icons
mkdesktophdicons

playsound

GDK_USE_XFT=1
export GDK_USE_XFT

if type xfce4 >/dev/null 2>&1; then
# XFCE4 setup
if [ ! -e $HOME/.xfce4 ]; then
\cp -au /etc/skel/.xf* /usr/share/knoppix/profile/.xf* $HOME/
[ ! -d $HOME/.xfce4 ] && mkdir -p $HOME/.xfce4
echo "$BACKGROUND
auto" >$HOME/.xfce4/xfbdrc
fi
# Start the background graphics daemon
exec xfbd4 >/dev/null 2>&1 &
sleep 2
# This one may not exist yet - xfce4 settings manager
exec xfce-mcs-manager >/dev/null 2>&1 &
sleep 2
# The window manager component
exec xfwm4 --daemon >/dev/null 2>&1 &
sleep 2
# The taskbar
# exec xftaskbar4 -button=3 >/dev/null 2>&1 &
# sleep 2
# The background menu is started last
XFWM=xfdeskmenu
else
[ -e $HOME/.xfce ] || mkdir $HOME/.xfce
XFWM=xfwm
fi

exec $XFWM
}

# Check for sufficient Real Memory for starting KDE or GNOME
# (We don't want to end in a swap-a-lot loop.)
REALMEM="$(awk '/MemTotal/{print $2}' /proc/meminfo)"
FREEMEM="$(awk 'BEGIN{m=0};/MemFree|Cached|SwapFree/{m+=$2};END{print m}' /proc/meminfo)"
if [ "$REALMEM" -lt 25000 ]; then
starttwm
else
#    gnome|GNOME) [ "$FREEMEM" -ge "45000" ] && startgnome || starttwm lowmem 67; ;;
case "$DESKTOP" in
        kde|KDE) [ "$FREEMEM" -ge "60000" ] && startkde   || starttwm lowmem 82; ;;
  larswm|LARSWM) [ "$FREEMEM" -ge "35000" ] && startlarswm || starttwm lowmem 64; ;;
fluxbox|FLUXBOX) [ "$FREEMEM" -ge "35000" ] && startfluxbox || starttwm lowmem 64; ;;
      xfce|XFCE) [ "$FREEMEM" -ge "35000" ] && startxfce || starttwm lowmem 64; ;;
windowmaker|wmaker|WINDOWMAKER|WMAKER) [ "$FREEMEM" -ge "35000" ] && startwindowmaker || starttwm lowmem 64; ;;
    icewm|ICEWM) [ "$FREEMEM" -ge "35000" ] && starticewm || starttwm lowmem 64; ;;
        twm|TWM) starttwm;   ;;
              *) starttwm invalidwm;   ;;
esac
fi
